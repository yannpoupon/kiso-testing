[tool.poetry]
name = "pykiso"
version = "0.21.1"
description = "Embedded integration testing framework."
authors = ["Sebastian Fischer <sebastian.fischer@de.bosch.com>"]
license = "Eclipse Public License - v 2.0"
readme = "README.md"
homepage = "https://pypi.org/project/pykiso/"
repository = "https://github.com/eclipse/kiso-testing"
documentation = "https://kiso-testing.readthedocs.io/en/latest/"
packages = [
    { include = "pykiso", from = "src" }
]
include = [
    "src/pykiso/test_result/templates/report_template.html.j2",
    "src/pykiso/test_result/templates/report_template.css",
]
keywords = [
    "testing",
    "integration testing",
    "framework",
    "testing framework",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Eclipse Public License 2.0 (EPL-2.0)",
    "Operating System :: Unix",
    "Operating System :: POSIX",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: MacOS",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Utilities",
]

[tool.poetry.dependencies]
python = "^3.7"
brainstem = "*"
PyYAML = "^6.0"
pylink-square = ">=0.12,<0.15"
pyserial = "^3.0"
python-can = {version = "~4.1.0", extras = ["pcan"]}
PyVISA = "^1.12.0"
PyVISA-py = "~0.5.3"
robotframework = "3.2.2"
unittest-xml-reporting = "^3.2.0"
click = ">=7.0.0,<9.0.0"
pykiso-python-uds = "~3.0.2"
tabulate = ">=0.8.9,<0.10.0"
Jinja2 = ">=2.11.0,<4.0.0"
MarkupSafe = "~2.0.1" # Allow support for Jinja2 between 2.11 < x < 3
importlib-metadata = "*"
pyreadline3 = {version = "^3.4.1", python = "^3.5"}
hidapi = "^0.12.0.post2"
rich = {version = "^13.2.0", optional = true}
requests = {version = "^2.28.2", optional = true}


[tool.poetry.dev-dependencies]
black = "22.10.0"
bump2version = "*"
coverage = { version = "^6.5", extras = ["toml"] }
invoke = "*"
pdbpp = "*"
pre-commit = "*"
pylint = "*"
pytest = "*"
pytest-cov = "*"
pytest-mock = "*"
Sphinx = "*"
sphinx-rtd-theme = "*"
sphinxcontrib-programoutput = "*"
sphinx-autodoc-typehints = "*"

[tool.poetry.extras]
testrail = [
    "rich",
    "requests",
]

all = [
    "rich",
    "requests",
]

[tool.poetry.scripts]
pykiso = 'pykiso.cli:main'
pykiso-tags = 'pykiso.tool.show_tag:main'
instrument-control = 'pykiso.lib.auxiliaries.instrument_control_auxiliary.instrument_control_cli:main'
pykitest = 'pykiso.tool.pykiso_to_pytest.cli:main'
testrail = "pykiso.tool.testrail.cli:cli_testrail"

[tool.pytest.ini_options]
testpaths = [
    "tests/"
]
addopts = """\
    --verbose \
    --log-level=INFO \
    --cov=./src \
    --cov-report=html \
    --cov-report html:./tests/coverage_report.html \
    --ignore=tests/test_acroname_usb_auxiliary.py \
    --ignore=tests/test_robot_acroname.py \
"""

[tool.coverage.run]
omit = [
    "*/tests/*",
    "*/examples/*",
    "*/setup.py",
    "*/tasks.py",
    "*/src/pykiso/tool/*",
    "*/src/pykiso/__main__.py",
    "*/src/pykiso/interfaces/thread_auxiliary.py",
    "*/src/pykiso/lib/auxiliaries/acroname_auxiliary.py",
    "*__init__.py",
]

[tool.coverage.report]
exclude_lines = ["pass", "def __repr__" ,"pragma: no cover","if TYPE_CHECKING:"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
